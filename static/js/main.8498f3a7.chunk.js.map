{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","backlog","color","heading","items","toDo","inProgrss","completed","categoies","keys","buildItems","data","category","categoryIndex","indexOf","length","i","push","react_default","a","createElement","key","className","getLeftBtn","getRightBtn","segments","columns","_loop","elm","style","background","onClick","addItem","console","log","newCategory","React","createRef","_this2","found","itemDetails","prompt","forEach","element","includes","alert","setState","defineProperty","val","current","value","obj","index","side","_this$setState3","destination","item","splice","originIndex","_this3","moveItem","_this4","_this5","type","ref","placeholder","addCategory","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8498f3a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    backlog: {\n      color: \"red\",\n      heading: \"Backlog\",\n      items: []\n    },\n    toDo: {\n      color: \"yellow\",\n      heading: \"To Do\",\n      items: []\n    },\n    inProgrss: {\n      color: \"green\",\n      heading: \"In Progress\",\n      items: []\n    },\n    completed: {\n      color: \"blue\",\n      heading: \"Completed\",\n      items: []\n    }\n  }\n\n\n  constructor(props) {\n    super(props)\n    this.newCategory = React.createRef();\n  }\n\n  categoies = Object.keys(this.state)\n\n  addItem(category) {\n    let found = false\n    var itemDetails = prompt(\"Please enter Item details\", \"\");\n    if (itemDetails && itemDetails.length > 0) {\n      this.categoies.forEach(element => {\n        let items = this.state[element].items;\n        if (items.includes(itemDetails)) {\n          alert(\"Item Exists\")\n          if (!found) {\n            found = true\n          }\n        }\n      });\n      if (!found) {\n        this.state[category].items.push(itemDetails);\n        this.setState({\n          [category]: this.state[category]\n        })\n      }\n    }\n    console.log(this.state);\n  }\n\n  addCategory() {\n    let val = this.newCategory.current.value;\n    let obj = {\n      color: \"grey\",\n      heading: val,\n      items: []\n    }\n    // this.stseate[val] = obj\n    this.categoies.push(val)\n\n    this.setState({\n      [val]: obj\n    })\n\n    this.newCategory.current.value = \"\"\n\n  }\n\n  moveItem(index, category, side) {\n    let destination;\n    let item = this.state[category].items.splice(index, 1)\n    let originIndex = this.categoies.indexOf(category)\n    if (side === \"right\") {\n      destination = this.categoies[originIndex + 1]\n    } else if (side === \"left\") {\n      destination = this.categoies[originIndex - 1]\n    }\n     this.state[destination].items.push(item[0])\n    this.setState({\n      [category]: this.state[category],\n      [destination]: this.state[destination]\n    })\n    console.log(this.state);\n  }\n\n  getLeftBtn(categoryIndex, length, i, category) {\n    if (categoryIndex !== 0) {\n      return [<div key={i} className=\"leftBtn\">\n        <button onClick={() => this.moveItem(i, category, \"left\")} className=\"btn\"> \t&lt;  </button>\n      </div>]\n    } else {\n      return \"\"\n    }\n  }\n\n  getRightBtn(categoryIndex, length, i, category) {\n    if (categoryIndex !== length) {\n      return [<div key={i} className=\"rightBtn\">\n        <button onClick={() => this.moveItem(i, category, \"right\")} className=\"btn\">\t&gt;</button>\n      </div>]\n    } else {\n      return \"\"\n    }\n  }\n\n  buildItems = (data, category) => {\n    let items = [];\n    let categoryIndex = this.categoies.indexOf(category);\n    let length = this.categoies.length - 1\n    for (let i = 0; i < data.length; i++) {\n      items.push(\n        <div key={i}className=\"item\">\n          <div className=\"leftBtn\">\n            {this.getLeftBtn(categoryIndex, length, i, category)}\n          </div>\n          <div className=\"item-content\">\n            {data[i]}\n          </div>\n          {this.getRightBtn(categoryIndex, length, i, category)}\n        </div>\n      )\n    }\n    return items\n  }\n\n\n  segments = () => {\n    let columns = []\n    for (let elm in this.state) {\n      columns.push(\n        <div key={elm} className=\"column\" style={{ background: this.state[elm].color }}>\n          <h2 className=\"textCenter\">{this.state[elm].heading}</h2>\n          <div className=\"textCenter\">\n            <button onClick={() => this.addItem(elm)}>+ Add Item</button>\n          </div>\n          <div className=\"content\">\n            {this.buildItems(this.state[elm].items, elm)}\n          </div>\n        </div>\n      )\n    }\n    console.log(columns);\n    return columns\n  }\n\n  render() {\n    return (\n\n      <div className=\"wrapper\">\n        <div className=\"headSection\">\n          <div className=\"addSection\">\n            <label>Add Category</label>\n            <input type=\"text\" ref={this.newCategory} placeholder=\"name\"></input>\n            <button onClick={() => this.addCategory()}>Add</button>\n          </div>\n\n        </div>\n        <div className=\"main-content\">\n\n          {this.segments()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}